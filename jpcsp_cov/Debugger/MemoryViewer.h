#pragma once

#include "../Emulator.h"
#include "../Memory.h"
#include "../Settings.h"
#include <string>
#include <limits>
#include <stdexcept>

/*
This file is part of jpcsp.

Jpcsp is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Jpcsp is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Jpcsp.  If not, see <http://www.gnu.org/licenses/>.
 */

namespace jpcsp::Debugger
{


	/**
	 *
	 * @author  George
	 */
	class MemoryViewer : public javax::swing::JFrame
	{
		//Processor cpu;
	public:
		int startaddress = 0;
		/** Creates new form MemoryViewer */
		virtual ~MemoryViewer()
		{
			delete AddressField;
			delete GoToButton;
			delete jScrollPane1;
			delete memoryview;
		}

		MemoryViewer();
	private:
		char converttochar(int character);

		signed char safeRead8(int address);

	public:
		virtual void RefreshMemory();
		/** This method is called from within the constructor to
		 * initialize the form.
		 * WARNING: Do NOT modify this code. The content of this method is
		 * always regenerated by the Form Editor.
		 */
	private:
//JAVA TO C++ CONVERTER TODO TASK: Most Java annotations will not have direct C++ equivalents:
//ORIGINAL LINE: @SuppressWarnings("unchecked") private void initComponents()
		void initComponents();

	private:
		class WindowAdapterAnonymousInnerClass : public java::awt::event::WindowAdapter
		{
		private:
			MemoryViewer *outerInstance;

		public:
			virtual ~WindowAdapterAnonymousInnerClass()
			{
				delete outerInstance;
			}

			WindowAdapterAnonymousInnerClass(MemoryViewer *outerInstance);

			void windowDeactivated(java::awt::event::WindowEvent *evt);
		};

	private:
		class MouseWheelListenerAnonymousInnerClass : public java::awt::event::MouseWheelListener
		{
		private:
			MemoryViewer *outerInstance;

		public:
			virtual ~MouseWheelListenerAnonymousInnerClass()
			{
				delete outerInstance;
			}

			MouseWheelListenerAnonymousInnerClass(MemoryViewer *outerInstance);

			void mouseWheelMoved(java::awt::event::MouseWheelEvent *evt);
		};

	private:
		class KeyAdapterAnonymousInnerClass : public java::awt::event::KeyAdapter
		{
		private:
			MemoryViewer *outerInstance;

		public:
			virtual ~KeyAdapterAnonymousInnerClass()
			{
				delete outerInstance;
			}

			KeyAdapterAnonymousInnerClass(MemoryViewer *outerInstance);

			void keyPressed(java::awt::event::KeyEvent *evt);
		};

	private:
		class ActionListenerAnonymousInnerClass : public java::awt::event::ActionListener
		{
		private:
			MemoryViewer *outerInstance;

		public:
			virtual ~ActionListenerAnonymousInnerClass()
			{
				delete outerInstance;
			}

			ActionListenerAnonymousInnerClass(MemoryViewer *outerInstance);

			void actionPerformed(java::awt::event::ActionEvent *evt);
		};

private:
	void memoryviewKeyPressed(java::awt::event::KeyEvent *evt);

	void GoToButtonActionPerformed(java::awt::event::ActionEvent *evt);

	void memoryviewMouseWheelMoved(java::awt::event::MouseWheelEvent *evt);

	void formWindowDeactivated(java::awt::event::WindowEvent *evt);



		// Variables declaration - do not modify//GEN-BEGIN:variables
		javax::swing::JTextField *AddressField;
		javax::swing::JButton *GoToButton;
		javax::swing::JScrollPane *jScrollPane1;
		javax::swing::JTextArea *memoryview;
		// End of variables declaration//GEN-END:variables

	};

}
